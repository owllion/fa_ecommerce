name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    #jobs is gonna run on ubuntu

    steps:
      - name: create env file
        run: |
          touch .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env

      # Step 1
      # to clone your repository into the GitHub Actions' execution environment, allowing your workflow to perform operations on the code in the repository.
      - uses: actions/checkout@v2

      # Step 2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      # Step 3
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv
      # Step 4
      - name: Setup Virtual env
        uses: actions/cache@v2
        id: cache-venv #for later access
        with:
          path: venv #cache路徑
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }} #每個cache的獨特key，可用來做辨識hasfile是內建函數，最後return一個hash
          restore-keys: |
            ${{ runner.os }}-venv-
          #用來恢復cache(如果cache expire或照不到)反之就會重新建立cache
      # Step 5
      - name: Activate and Install Depencies into Virtual env
        run: python -m venv venv && source venv/bin/activate &&
          pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
        #沒有cache就重新建立一個venv &安裝套件

      # Step 6
      - name: Activate venv and Run Test
        run: . venv/bin/activate && pytest

      # Step 7
      - name: Create Zipfile archive of Dependencies
        run: |
          cd ./venv/lib/site-packages
          zip -r9 ../../../../api.zip .

      # Step 8
      - name: Add App to Zip file
        run: cd ./app && zip -g ../api.zip -r .

      # Step 9
      #Upload the api.zip to GitHub server as an artifact using actions/upload-artifact@v2 . This will enable the next 'job' to retrieve back the artifact file for the deployment of our lambda package which is our api.zip file.
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip

      #Docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: traversal/react-shopapp:1.0
